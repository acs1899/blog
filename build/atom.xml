<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>wulfovitch.net</title>
 <link href="http://wulfovitch.net/atom.xml" rel="self"/>
 <link href="http://wulfovitch.net/"/>
 <updated>2013-09-27T00:27:29+08:00</updated>
 <id>http://wulfovitch.net/</id>
 <author>
   <name>Wolfgang König</name>
 </author>
 
 
 <entry>
   <title>搭一个VPN服务器需要些什么</title>
   <link href="http://wulfovitch.net/2013/09/vpn-setup/"/>
   <updated>2013-09-26T19:27:33+08:00</updated>
   <id>http://wulfovitch.net/2013/09/vpn-setup</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;本文主要细谈搭建VPN服务器（包括测试）需要用到的知识点，不会详细说明VPN的配置&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;安装&lt;/h3&gt;

&lt;p&gt;要搭配一个PPTPD VPN，需要安装以下软件包：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ppp&lt;/li&gt;
&lt;li&gt;pptpd&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;他们是用来做什么的不清楚，从包信息上看ppp是point to pint协议守护进程，PPTPD才是VPN的守护进程&lt;/p&gt;

&lt;p&gt;安装pptpd yum源没有，在网上下载rpm包手动安装，下面说明RPM命令的使用方法：&lt;/p&gt;

&lt;h4&gt;rpm&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;-q --query 查询包信息&lt;/li&gt;
&lt;li&gt;-i --install 安装包&lt;/li&gt;
&lt;li&gt;-u --upgrade 升级包&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一些常用的组合命令&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;rpm -ivh i表示安装包，vh组合打印安装进度，可以直接跟http或ftp协议
rpm -ivh -replacepkgs 替换原有的相同包&lt;/p&gt;

&lt;p&gt;rpm -qa q表示查看包，a表示查看所有安装的包
rpm -qpl p provides 查看包提供些什么，l list 列出包中的文件 pl可以查看包会在系统中安装哪些东西
rpm -qpi i information 查看包的信息
rpm -qf f file 查看某个文件属于哪个包
which python | xargs rpm -qf 查看可执行文件python属于哪个包&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;起服务&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;/etc/init.d/pptpd start&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后用chkconfig设置开机自动启动&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;chkconfig pptpd on&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;chkconfig&lt;/h4&gt;

&lt;p&gt;chkconfig 管理linux各个服务在系统以什么样的方式运行时的状态，大多数都是用来设置开机自动启动。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;chkconfig pptpd off 关闭开机自动启动&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;nat转发&lt;/h3&gt;

&lt;p&gt;一切风平浪静的话，简单的配置一下/etc/pptpd.conf 和 /etc/ppp/options.pptpd 就可以连了，
但现实是冷酷残酷甚至桎梏的，连上VPN 只能算是可以和VPN服务器通信，现在还得让VPN服务器将
来源流量转发到eth0网卡上&lt;/p&gt;

&lt;h4&gt;iptables&lt;/h4&gt;

&lt;p&gt;iptables 就是防火墙，可以根据自定义的过滤规则设置哪些数据包接受哪些数据包丢弃，还可以设置流量转发&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE
这条命令修改nat表(-t)，增加一条规则(-A)，当流量流出时改变流量(POSTROUTING)，将来自192.168.0网段的流量(-s 192.168.0.0/24)
转发到eth0网卡上(-o eth0)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;iptables 东西太多了， 这里就不细讲&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>my first post1</title>
   <link href="http://wulfovitch.net/2013/09/wo-le-ge-cao/"/>
   <updated>2013-09-23T19:27:55+08:00</updated>
   <id>http://wulfovitch.net/2013/09/wo-le-ge-cao</id>
   <content type="html">&lt;p&gt;You&amp;#39;ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&amp;#39;s GitHub repo&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>是哪个apache进程处理了我的请求</title>
   <link href="http://wulfovitch.net/2013/09/which-httpd-handle-my-request/"/>
   <updated>2013-09-23T19:27:33+08:00</updated>
   <id>http://wulfovitch.net/2013/09/which-httpd-handle-my-request</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;当一个HTTP请求过来了，如何查看是哪个HTTPD在处理这个请求呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;首先用&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;netstat -ntpea&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;查找监听80端口的进程并且状态为ESTABILISH的进程Inode&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-t TCP&lt;/li&gt;
&lt;li&gt;-p Show the PID and name of the program to which each socket belongs.&lt;/li&gt;
&lt;li&gt;-e Display additional information.  Use this option twice for maximum detail.&lt;/li&gt;
&lt;li&gt;-a Show both listening and non-listening sockets.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然后在PID列就可以找到进程号了。&lt;/p&gt;

&lt;p&gt;如果出现无法显示PID的情况，可以给netstat 加-e参数打印进程的Inode值。&lt;/p&gt;

&lt;p&gt;Linux中进程也是文件，所以肯定就有Inode，这时去/proc/*/fd/中查找这个这个值，查找到后获取&lt;/p&gt;

&lt;p&gt;上级目录的进程号就可以了，查找命令如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo ls -l /proc/*/fd/ | grep -E &amp;quot;{$Inode}&amp;quot; -A10 -B10&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Welcome to Jekyll!</title>
   <link href="http://wulfovitch.net/2013/09/welcome-to-jekyll/"/>
   <updated>2013-09-23T19:27:33+08:00</updated>
   <id>http://wulfovitch.net/2013/09/welcome-to-jekyll</id>
   <content type="html">&lt;p&gt;You&amp;#39;ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&amp;#39;s GitHub repo&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Welcome to Jekyll!</title>
   <link href="http://wulfovitch.net/2013/09/my-first-blog/"/>
   <updated>2013-09-23T19:27:33+08:00</updated>
   <id>http://wulfovitch.net/2013/09/my-first-blog</id>
   <content type="html">&lt;h1&gt;This is an H1&lt;/h1&gt;

&lt;h2&gt;This is an H2&lt;/h2&gt;

&lt;h1&gt;this is H1&lt;/h1&gt;

&lt;h2&gt;this is H2&lt;/h2&gt;

&lt;h3&gt;this is H3&lt;/h3&gt;

&lt;h4&gt;this is H4&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;这里是引用
  ，接着引用&lt;/p&gt;

&lt;p&gt;空一行后再起一个引用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  无序列表&lt;/li&gt;
&lt;li&gt;  无序列表&lt;/li&gt;
&lt;li&gt;&lt;p&gt;无序列表&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中间有内容&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里是内容&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  再来点内容
这里是内容&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt; 有序列表&lt;/li&gt;
&lt;li&gt; 有序列表&lt;/li&gt;
&lt;li&gt; 有序列表&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;强调区域&lt;strong&gt;这里就是强调区域了&lt;/strong&gt;，我了个擦的Vim还支持markdown的高亮&lt;/p&gt;

&lt;h2&gt;down here is a line&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hahahaha&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__constrcut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 
</feed>